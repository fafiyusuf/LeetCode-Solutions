class Solution:
    def minEatingSpeed(self, piles, h):
        def canFinish(speed):
            total_time = 0
            for pile in piles:
                total_time += (pile + speed - 1) // speed  # Equivalent to ceil(pile / speed)
            return total_time <= h  # Check after iterating through all piles

        left, right = 1, max(piles)
        result = right

        while left <= right:
            mid = (left + right) // 2
            if canFinish(mid):
                result = mid  # Try to find a smaller valid speed
                right = mid - 1
            else:
                left = mid + 1

        return result
